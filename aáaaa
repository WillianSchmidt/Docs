import Component from './Bmoscpha_Component.js';
import DisableableMixin from './Bmoscpha_DisableableMixin.js';
import { PropString } from './Bmoscpha_Prop.js';

/**
 * Define o componente container Accordions.
 */
export default class Accordions extends Component {
    static get componentName() {
        return 'accordions';
    }

    static get props() {
        return [
            ...super.props,
            new PropString('type'), // Define o comportamento do accordion: 'radio' ou 'checkbox'
        ];
    }

    static get styles() {
        return /*css*/`
            :host {
                display: block;
                width: 100%;
            }
            :host ::slotted(ds-accordion) {
                margin-bottom: 0.5rem;
            }
        `;
    }

    render() {
        return /*html*/`
            <fieldset>
                <legend>Accordion Container</legend>
                <slot></slot>
            </fieldset>
        `;
    }
}

Component.register(Accordions);

/**
 * Define o componente Accordion.
 */
export class Accordion extends DisableableMixin(Component) {
    static get componentName() {
        return 'accordion';
    }

    static get props() {
        return [
            ...super.props,
            new PropString('titulo'),
            new PropString('texto'),
            new PropString('icon'),
        ];
    }

    static get styles() {
        return /*css*/`
            :host {
                display: block;
                border: 1px solid #ddd;
                border-radius: 5px;
                overflow: hidden;
                transition: box-shadow 0.3s;
            }

            .header {
                display: flex;
                align-items: center;
                padding: 10px;
                cursor: pointer;
                background: #f5f5f5;
                transition: background 0.3s;
            }

            .header:hover {
                background: #e0e0e0;
            }

            .content {
                max-height: 0;
                overflow: hidden;
                padding: 0 10px;
                background: #fafafa;
                transition: max-height 0.3s ease-out, padding 0.3s;
            }

            .content.open {
                max-height: 200px; /* Ajustar conforme o conte√∫do */
                padding: 10px;
            }

            ds-icon {
                margin-right: 10px;
                transition: transform 0.3s;
            }

            .rotate {
                transform: rotate(90deg);
            }
        `;
    }

    constructor() {
        super();
        this.open = false; // Estado do accordion
    }

    toggleAccordion() {
        this.open = !this.open;

        const content = this.shadowRoot.querySelector('.content');
        const icon = this.shadowRoot.querySelector('ds-icon');

        content.classList.toggle('open', this.open);
        icon.classList.toggle('rotate', this.open);

        this.dispatchEvent(new CustomEvent('accordionToggle', { detail: { open: this.open } }));
    }

    render() {
        return /*html*/`
            <div class="header" role="button" aria-expanded="${this.open}">
                <ds-icon name="chevron_right"></ds-icon>
                <span>${this.titulo}</span>
            </div>
            <div class="content">
                <p>${this.texto}</p>
            </div>
        `;
    }

    connectedCallback() {
        super.connectedCallback();

        this.shadowRoot.querySelector('.header').addEventListener('click', () => {
            this.toggleAccordion();
        });
    }
}

Component.register(Accordion);
