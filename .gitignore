export class Accordion extends DisableableMixin(Component) {
    /**
     * Define o nome da tag do componente Accordion: `<ds-accordion>`.
     */
    static get componentName() {
        return 'accordion';
    }

    /**
     * Define as propriedades do componente. Accordion por unidade.
     */
    static get props() {
        return [
            ...super.props,
            new PropString('icon'),
            new PropString('titulo'),
            new PropString('texto'),
        ];
    }

    /**
     * Define os estilos CSS do componente único Accordion.
     */
    static get styles() {
        return /*css*/`
            :host {
                --bullet-background: transparent;
                --bullet-flex-direction: column;
                --bullet-background-active: var(--ds-color-ui-surface);
                --bullet-align-items: flex-start;
                --icon-color: var(--ds-color-action);
                --icon-color-active: var(--ds-color-action-pressed);
                --label-color: var(--ds-color-text-normal);
                --icon-background:transparent;                
            }

            .accordion {
                background-color: #eee;
                color: #444;
                cursor: pointer;
                padding: 18px;
                width: 100%;
                border: none;
                text-align: left;
                outline: none;
                font-size: 15px;
                transition: background-color 0.4s;
            }
              
            .active, .accordion:hover {
                background-color: #ccc;
            }
              
            .accordion:after {
                content: '+';
                color: #777;
                font-weight: bold;
                float: right;
                margin-left: 5px;
            }
              
            .active:after {
                content: "-";
            }
              
            .panel {
                padding: 0 18px;
                background-color: white;
                max-height: 0;
                overflow: hidden;
                transition: max-height 0.2s ease-out;
            }

            .panel.open {
                max-height: 500px; /* Ajuste conforme necessário */
            }
        `;
    }

    /**
     * Renderiza o conteúdo do componente.
     */
    render() {
        return /*html*/`
            <div class="container">
                <button class="accordion">${this.titulo}</button>
                <div class="panel">
                    <p>${this.texto}</p>
                </div>
            </div>
        `;
    }

    /**
     * Lógica de inicialização e configuração de eventos.
     */
    connectedCallback() {
        super.connectedCallback();
        const button = this.shadowRoot.querySelector('.accordion');
        const panel = this.shadowRoot.querySelector('.panel');

        // Configura o evento de clique no botão
        button.addEventListener('click', () => {
            button.classList.toggle('active');

            if (panel.classList.contains('open')) {
                panel.classList.remove('open');
            } else {
                panel.classList.add('open');
            }

            // Dispara um evento personalizado
            const event = new CustomEvent('accordionToggle', {
                detail: {
                    element: this,
                    panel: panel,
                    isActive: button.classList.contains('active'),
                },
            });
            this.dispatchEvent(event);
        });
    }
}
